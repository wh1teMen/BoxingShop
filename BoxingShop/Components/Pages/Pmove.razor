@page "/products/{ProductID:int}"
@rendermode InteractiveServer
@inject NavigationManager NavigationManager
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-9ndCyUaIbzAi2FUVXJi0CjmCapSmO7SnpJef0486qhLnuZ2cdeRhO02iuK6FUUVM" crossorigin="anonymous">

@if (prod == null)
{
    <p>Товар не найден</p>
}
else
{
    <div style="display:flex;justify-content:center">
        <div style="display:flex;justify-content:center;width:400px;flex-direction:column;">
            <div>
                <h3>Бренд: @prod.Brand</h3>
            </div>
            <div>
                <h3>Цвет: <span style="color:@prod.Color">@prod.Color</span></h3>
            </div>
            <div>
                <h3>Размер: @prod.Size унций</h3>
            </div>
            <div>
                <h3>Цена: @prod.Price рублей</h3>
            </div>
        </div>
        <div>
            <img src="@prod.UrlImg" style="width:500px;height:500px" />
        </div>
        <div style="width:400px">
            <h3>Описание: @prod.Description</h3>
        </div>

    </div>

    <div style="display:flex;justify-content:center;margin-top:20px;">
        <button class="btn btn-primary" @onclick="GoBack" style="width:90%"> Назад</button>

    </div>
    
}

@code {
    [Parameter]
    public int ProductID { get; set; }
    Model.Product prod;
    protected override void OnInitialized()
    {
        var options = new DbContextOptionsBuilder<BoxingShop.ContextDB.AppContext>().UseSqlite("Data Source=Shop.db").Options;
        using (var dbContext = new BoxingShop.ContextDB.AppContext(options))
        {
            prod = dbContext.Products.FirstOrDefault(t => t.Id == ProductID);
        }
    }
    void GoBack()
    {
        NavigationManager.NavigateTo("/products");
    }

}
