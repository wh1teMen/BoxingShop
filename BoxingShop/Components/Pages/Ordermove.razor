@page "/orders/{OrderID:int}"
@rendermode InteractiveServer
@using System.Text.Json;
@using System.Text.Json.Serialization;
@inject NavigationManager NavigationManager
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-9ndCyUaIbzAi2FUVXJi0CjmCapSmO7SnpJef0486qhLnuZ2cdeRhO02iuK6FUUVM" crossorigin="anonymous">
 
<div style="display:flex;justify-content:center;margin-top:40px;">
    <h3>Информация о заказе # @OrderID</h3>
</div>
<div style="display:flex;justify-content:center;text-align:center;">
    <div style="display:flex;justify-content:center;width:60%;margin-top:30px;">
        <table class="table">
            <thead>
                <tr>
                    <th scope="col"></th>
                    <th scope="col">Бренд</th>
                    <th scope="col">Цвет</th>
                    <th scope="col">Размер</th>
                    <th scope="col">Цена</th>
                    <th scope="col">Количество</th>                                                                 
                </tr>
            </thead>
            <tbody>
                @foreach (var elCart in @cart)
                {
                    <tr class="table-light">
                            <td><img src="@elCart.UrlImg" style="width:100px;height:100px" class="card-img-top" alt="..."></td>
                        <td>@elCart.Brand</td>
                        <td>@elCart.Color</td>
                        <td >@elCart.Size</td>
                        <td>@elCart.Price</td>
                        <td> @elCart.CountProduct</td>
                    </tr>
                }               
            </tbody>
        </table>        

    </div>
</div>


@code {
    [Parameter]
    public int OrderID { get; set; }
    List<Model.ShopingCart> cart = new List<Model.ShopingCart>();
    Model.Order ?findeOrder;
    protected override void OnInitialized()
    {
        var options = new DbContextOptionsBuilder<BoxingShop.ContextDB.AppContext>().UseSqlite("Data Source=Shop.db").Options;
        using (var dbContext = new BoxingShop.ContextDB.AppContext(options))
        {
            findeOrder = dbContext.Orders.FirstOrDefault(t => t.Id == OrderID);
        }
        FillInfoOrder();
    }
    void FillInfoOrder()
    {
       cart = JsonSerializer.Deserialize<List<Model.ShopingCart>>(findeOrder.JsonOrder);
    }


}
